/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wanderer, WandererInterface } from "../Wanderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "fundsTo_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPerTx_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePer_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundsTo",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "preMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newFundsTo",
        type: "address",
      },
    ],
    name: "updateFundsTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002899380380620028998339810160408190526200003491620001ef565b604080518082018252600981526857616e64657265727360b81b6020808301918252835180850190945260068452652ba0a72222a960d11b908401528151919291620000839160009162000149565b5080516200009990600190602084019062000149565b505050620000b6620000b0620000f360201b60201c565b620000f7565b600c80546001600160a01b0319166001600160a01b039590951694909417909355600d91909155600e55600f805460ff1916905560105562000279565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000157906200023c565b90600052602060002090601f0160209004810192826200017b5760008555620001c6565b82601f106200019657805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c6578251825591602001919060010190620001a9565b50620001d4929150620001d8565b5090565b5b80821115620001d45760008155600101620001d9565b600080600080608085870312156200020657600080fd5b84516001600160a01b03811681146200021e57600080fd5b60208601516040870151606090970151919890975090945092505050565b600181811c908216806200025157607f821691505b602082108114156200027357634e487b7160e01b600052602260045260246000fd5b50919050565b61261080620002896000396000f3fe6080604052600436106101cd5760003560e01c80636ad1fe02116100f7578063b88d4fde11610095578063e985e9c511610064578063e985e9c5146104f1578063ecc1da271461053a578063f2fde38b1461055a578063f968adbe1461057a57600080fd5b8063b88d4fde14610486578063c683d8e4146104a6578063c87b56dd146104bb578063d5abeb01146104db57600080fd5b80638da5cb5b116100d15780638da5cb5b1461042057806395d89b411461043e578063a144819414610453578063a22cb4651461046657600080fd5b80636ad1fe02146103d157806370a08231146103eb578063715018a61461040b57600080fd5b8063290c292d1161016f57806342842e0e1161013e57806342842e0e1461035157806342966c68146103715780634f6ccce7146103915780636352211e146103b157600080fd5b8063290c292d146102dc5780632f745c59146102fc57806330136e381461031c57806330509bca1461033c57600080fd5b8063081812fc116101ab578063081812fc1461024d578063095ea7b31461028557806318160ddd146102a757806323b872dd146102bc57600080fd5b806301ffc9a7146101d257806306fdde0314610207578063070a8a8514610229575b600080fd5b3480156101de57600080fd5b506101f26101ed366004612316565b610590565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c6105a1565b6040516101fe9190612400565b34801561023557600080fd5b5061023f60105481565b6040519081526020016101fe565b34801561025957600080fd5b5061026d610268366004612350565b610633565b6040516001600160a01b0390911681526020016101fe565b34801561029157600080fd5b506102a56102a03660046122ea565b6106cd565b005b3480156102b357600080fd5b5060085461023f565b3480156102c857600080fd5b506102a56102d7366004612196565b6107ff565b3480156102e857600080fd5b506102a56102f73660046122ea565b610887565b34801561030857600080fd5b5061023f6103173660046122ea565b610a2d565b34801561032857600080fd5b50600c5461026d906001600160a01b031681565b34801561034857600080fd5b506102a5610ad5565b34801561035d57600080fd5b506102a561036c366004612196565b610bd5565b34801561037d57600080fd5b506102a561038c366004612350565b610bf0565b34801561039d57600080fd5b5061023f6103ac366004612350565b610c74565b3480156103bd57600080fd5b5061026d6103cc366004612350565b610d18565b3480156103dd57600080fd5b50600f546101f29060ff1681565b3480156103f757600080fd5b5061023f610406366004612140565b610da3565b34801561041757600080fd5b506102a5610e3d565b34801561042c57600080fd5b50600a546001600160a01b031661026d565b34801561044a57600080fd5b5061021c610ea3565b6102a56104613660046122ea565b610eb2565b34801561047257600080fd5b506102a56104813660046122b7565b6110cc565b34801561049257600080fd5b506102a56104a13660046121d7565b611191565b3480156104b257600080fd5b506102a561121f565b3480156104c757600080fd5b5061021c6104d6366004612350565b611288565b3480156104e757600080fd5b5061023f600d5481565b3480156104fd57600080fd5b506101f261050c36600461215d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561054657600080fd5b506102a5610555366004612140565b611371565b34801561056657600080fd5b506102a5610575366004612140565b6113ed565b34801561058657600080fd5b5061023f600e5481565b600061059b826114cc565b92915050565b6060600080546105b0906124a1565b80601f01602080910402602001604051908101604052809291908181526020018280546105dc906124a1565b80156106295780601f106105fe57610100808354040283529160200191610629565b820191906000526020600020905b81548152906001019060200180831161060c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106d882610d18565b9050806001600160a01b0316836001600160a01b031614156107625760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016106a8565b336001600160a01b038216148061077e575061077e813361050c565b6107f05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106a8565b6107fa838361150a565b505050565b61080a335b82611578565b61087c5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106a8565b6107fa83838361166f565b600a546001600160a01b031633146108e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b600f5460ff16156109345760405162461bcd60e51b815260206004820152601860248201527f53616c6520616c726561647920696e2070726f6772657373000000000000000060448201526064016106a8565b8061098b5760405162461bcd60e51b815260206004820152602160248201527f526571756573746564207175616e746974792063616e6e6f74206265207a65726044820152606f60f81b60648201526084016106a8565b600d548161099860085490565b6109a29190612413565b11156109f05760405162461bcd60e51b815260206004820152601e60248201527f546f74616c20737570706c792077696c6c20657863656564206c696d6974000060448201526064016106a8565b60005b818110156107fa57610a0d83610a08600b5490565b611847565b610a1b600b80546001019055565b80610a25816124dc565b9150506109f3565b6000610a3883610da3565b8210610aac5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e647300000000000000000000000000000000000000000060648201526084016106a8565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03163314610b2f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b600c546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610b7c576040519150601f19603f3d011682016040523d82523d6000602084013e610b81565b606091505b5050905080610bd25760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016106a8565b50565b6107fa83838360405180602001604052806000815250611191565b610bf933610804565b610c6b5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016106a8565b610bd281611865565b6000610c7f60085490565b8210610cf35760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e6473000000000000000000000000000000000000000060648201526084016106a8565b60088281548110610d0657610d0661254d565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061059b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016106a8565b60006001600160a01b038216610e215760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016106a8565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610e975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b610ea1600061190c565b565b6060600180546105b0906124a1565b600f5460ff16610f045760405162461bcd60e51b815260206004820152600d60248201527f53616c652064697361626c65640000000000000000000000000000000000000060448201526064016106a8565b80610f5b5760405162461bcd60e51b815260206004820152602160248201527f526571756573746564207175616e746974792063616e6e6f74206265207a65726044820152606f60f81b60648201526084016106a8565b600e54811115610fd25760405162461bcd60e51b8152602060048201526024808201527f526571756573746564207175616e74697479206d6f7265207468616e206d617860448201527f696d756d0000000000000000000000000000000000000000000000000000000060648201526084016106a8565b3460105482610fe1919061243f565b111561102f5760405162461bcd60e51b815260206004820152601560248201527f4e6f7420656e6f7567682065746865722073656e74000000000000000000000060448201526064016106a8565b600d548161103c60085490565b6110469190612413565b11156110945760405162461bcd60e51b815260206004820152601e60248201527f546f74616c20737570706c792077696c6c20657863656564206c696d6974000060448201526064016106a8565b60005b818110156107fa576110ac83610a08600b5490565b6110ba600b80546001019055565b806110c4816124dc565b915050611097565b6001600160a01b0382163314156111255760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a8565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61119b3383611578565b61120d5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106a8565b6112198484848461195e565b50505050565b600a546001600160a01b031633146112795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b600f805460ff19166001179055565b6000818152600260205260409020546060906001600160a01b03166113155760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016106a8565b600061131f6119dc565b9050600081511161133f576040518060200160405280600081525061136a565b80611349846119fc565b60405160200161135a929190612395565b6040516020818303038152906040525b9392505050565b600a546001600160a01b031633146113cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031633146114475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a8565b6001600160a01b0381166114c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106a8565b610bd28161190c565b60006001600160e01b031982167f780e9d6300000000000000000000000000000000000000000000000000000000148061059b575061059b82611b2e565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061153f82610d18565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166115f15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a8565b60006115fc83610d18565b9050806001600160a01b0316846001600160a01b031614806116375750836001600160a01b031661162c84610633565b6001600160a01b0316145b8061166757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661168282610d18565b6001600160a01b0316146116fe5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016106a8565b6001600160a01b0382166117795760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106a8565b611784838383611bc9565b61178f60008261150a565b6001600160a01b03831660009081526003602052604081208054600192906117b890849061245e565b90915550506001600160a01b03821660009081526003602052604081208054600192906117e6908490612413565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611861828260405180602001604052806000815250611bd4565b5050565b600061187082610d18565b905061187e81600084611bc9565b61188960008361150a565b6001600160a01b03811660009081526003602052604081208054600192906118b290849061245e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61196984848461166f565b61197584848484611c52565b6112195760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106a8565b60606040518060600160405280603681526020016125a560369139905090565b606081611a3c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611a665780611a50816124dc565b9150611a5f9050600a8361242b565b9150611a40565b60008167ffffffffffffffff811115611a8157611a81612563565b6040519080825280601f01601f191660200182016040528015611aab576020820181803683370190505b5090505b841561166757611ac060018361245e565b9150611acd600a866124f7565b611ad8906030612413565b60f81b818381518110611aed57611aed61254d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611b27600a8661242b565b9450611aaf565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480611b9157506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061059b57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461059b565b6107fa838383611daa565b611bde8383611e62565b611beb6000848484611c52565b6107fa5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106a8565b60006001600160a01b0384163b15611d9f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c969033908990889088906004016123c4565b602060405180830381600087803b158015611cb057600080fd5b505af1925050508015611ce0575060408051601f3d908101601f19168201909252611cdd91810190612333565b60015b611d85573d808015611d0e576040519150601f19603f3d011682016040523d82523d6000602084013e611d13565b606091505b508051611d7d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106a8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611667565b506001949350505050565b6001600160a01b038316611e0557611e0081600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611e28565b816001600160a01b0316836001600160a01b031614611e2857611e288382611fb0565b6001600160a01b038216611e3f576107fa8161204d565b826001600160a01b0316826001600160a01b0316146107fa576107fa82826120fc565b6001600160a01b038216611eb85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a8565b6000818152600260205260409020546001600160a01b031615611f1d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a8565b611f2960008383611bc9565b6001600160a01b0382166000908152600360205260408120805460019290611f52908490612413565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611fbd84610da3565b611fc7919061245e565b60008381526007602052604090205490915080821461201a576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061205f9060019061245e565b600083815260096020526040812054600880549394509092849081106120875761208761254d565b9060005260206000200154905080600883815481106120a8576120a861254d565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806120e0576120e0612537565b6001900381819060005260206000200160009055905550505050565b600061210783610da3565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60006020828403121561215257600080fd5b813561136a81612579565b6000806040838503121561217057600080fd5b823561217b81612579565b9150602083013561218b81612579565b809150509250929050565b6000806000606084860312156121ab57600080fd5b83356121b681612579565b925060208401356121c681612579565b929592945050506040919091013590565b600080600080608085870312156121ed57600080fd5b84356121f881612579565b9350602085013561220881612579565b925060408501359150606085013567ffffffffffffffff8082111561222c57600080fd5b818701915087601f83011261224057600080fd5b81358181111561225257612252612563565b604051601f8201601f19908116603f0116810190838211818310171561227a5761227a612563565b816040528281528a602084870101111561229357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156122ca57600080fd5b82356122d581612579565b91506020830135801515811461218b57600080fd5b600080604083850312156122fd57600080fd5b823561230881612579565b946020939093013593505050565b60006020828403121561232857600080fd5b813561136a8161258e565b60006020828403121561234557600080fd5b815161136a8161258e565b60006020828403121561236257600080fd5b5035919050565b60008151808452612381816020860160208601612475565b601f01601f19169290920160200192915050565b600083516123a7818460208801612475565b8351908301906123bb818360208801612475565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526123f66080830184612369565b9695505050505050565b60208152600061136a6020830184612369565b600082198211156124265761242661250b565b500190565b60008261243a5761243a612521565b500490565b60008160001904831182151516156124595761245961250b565b500290565b6000828210156124705761247061250b565b500390565b60005b83811015612490578181015183820152602001612478565b838111156112195750506000910152565b600181811c908216806124b557607f821691505b602082108114156124d657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124f0576124f061250b565b5060010190565b60008261250657612506612521565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bd257600080fd5b6001600160e01b031981168114610bd257600080fdfe697066733a2f2f516d5074455231543147767078375651475566567976666f58336b4e4772583461516d745455356d425a3168564d2fa2646970667358221220bc03086c0e2e310092923f4edd36ebeacfdbc26aa8aebb203a9b0cc079568f4664736f6c63430008060033";

export class Wanderer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    fundsTo_: string,
    maxSupply_: BigNumberish,
    maxPerTx_: BigNumberish,
    pricePer_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wanderer> {
    return super.deploy(
      fundsTo_,
      maxSupply_,
      maxPerTx_,
      pricePer_,
      overrides || {}
    ) as Promise<Wanderer>;
  }
  getDeployTransaction(
    fundsTo_: string,
    maxSupply_: BigNumberish,
    maxPerTx_: BigNumberish,
    pricePer_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      fundsTo_,
      maxSupply_,
      maxPerTx_,
      pricePer_,
      overrides || {}
    );
  }
  attach(address: string): Wanderer {
    return super.attach(address) as Wanderer;
  }
  connect(signer: Signer): Wanderer__factory {
    return super.connect(signer) as Wanderer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WandererInterface {
    return new utils.Interface(_abi) as WandererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Wanderer {
    return new Contract(address, _abi, signerOrProvider) as Wanderer;
  }
}
